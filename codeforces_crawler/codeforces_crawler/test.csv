output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
output,source_code,submission_id,submission_lang,submission_verdict
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",47610852,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define y ch[x][i]
#define c (a[i]^48)
#define For(x) for(int i=0;i<=9;i++) if(ch[x][i])
using namespace std;

char a[N];
int n,k,cnt;
int s[N],top;
int ch[N][10],val[N];
int d[N],f[N][N][11];

void ins(int x){
	int len=strlen(a+1),p=0;
	for(int i=1;i<=len;p=ch[p][c],i++)
		if(!ch[p][c]) ch[p][c]=++cnt; val[p]+=x;
}
void dp(int x){
	s[++top]=x;
	For(x) d[y]=d[x]+1,dp(y);
	For(x) for(int j=1;j<=top;j++)
        for(int v=k;~v;v--){
            f[x][s[j]][v]+=f[y][s[j]][0];
            for(int p=0;p<=v;p++)
                f[x][s[j]][v]=min(f[x][s[j]][v],f[x][s[j]][v-p]+f[y][s[j]][p]);
        }
    for(int j=1;j<=top;j++){
        f[x][s[j]][0]+=val[x]*(d[x]-d[s[j]]);
        for(int v=1;v<=k;v++)
            f[x][s[j]][v]=min(f[x][s[j]][v]+val[x]*(d[x]-d[s[j]]),f[x][x][v-1]);
    } top--;
}
signed main(){
	cin>>n>>k;
	for(int x,i=1;i<=n;i++)
		scanf(""%s%d"",a+1,&x),ins(x);
	dp(0); cout<<f[0][0][k];
}
",57867838,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define MN 505
using namespace std;
int n,dp[MN][MN][11],s[MN][11],tt,k,cnt[MN],dep[MN];char ch[MN];
int Dp(int u,int d,int lk){
	if(dp[u][d][lk]!=-1)return dp[u][d][lk];
	int tmp[11],bb[11],tmpx[11];memset(bb,0,sizeof(bb));
	for(int i=0;i<10;i++)if(s[u][i]){
		for(int j=lk;j>=0;j--)tmp[j]=Dp(s[u][i],d,j);
		memset(tmpx,0x3f,sizeof(tmpx));
		for(int x=0;x<=lk;x++)for(int y=0;x+y<=lk;y++)tmpx[x+y]=min(tmpx[x+y],tmp[x]+bb[y]);
		memcpy(bb,tmpx,sizeof(tmpx));
	}int res=bb[lk]+cnt[u]*(dep[u]-d);
	if(lk)res=min(res,Dp(u,dep[u],lk-1));
	return dp[u][d][lk]=res;
}
int main(){
	scanf(""%d%d"",&n,&k);int opt;
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",ch+1,&opt);int len=strlen(ch+1),now=0;
		for(int j=1;j<=len;j++){
			if(!s[now][ch[j]-'0'])s[now][ch[j]-'0']=++tt,dep[tt]=dep[now]+1;
			now=s[now][ch[j]-'0'];
		}cnt[now]+=opt;
	}memset(dp,-1,sizeof(dp));
	printf(""%d\n"",Dp(0,0,k));
}
",46395351,GNU C++11,OK
,"#include<cstdio>
#include<algorithm>
using namespace std;
int n,K,top,m,sum[505];
char s[505];
int t[5050][11],dep[5050];
int f[505][505][11],g[505][505][11];
void add(){
	int v=0;
	for(int i=1;s[i];i++){
		if(t[v][s[i]-'0']==0)t[v][s[i]-'0']=++top;
		v=t[v][s[i]-'0'];
	}
	sum[v]+=m;
}
int sta[505],siz;
void dfs(int u){
	sta[++siz]=u;
	for(int i=0;i<=9;i++)
	if(t[u][i]){
		int v=t[u][i];
		dep[v]=dep[u]+1;
		dfs(v);
		for(int j=1;j<=siz;j++)
		for(int k=K;k>=0;k--){
			f[u][sta[j]][k]+=f[v][sta[j]][0];
			g[u][sta[j]][k]+=f[v][u][0];
			for(int x=1;x<=k;x++){
				f[u][sta[j]][k]=min(f[u][sta[j]][k],f[u][sta[j]][k-x]+f[v][sta[j]][x]);
				g[u][sta[j]][k]=min(g[u][sta[j]][k],g[u][sta[j]][k-x]+f[v][u][x]);
			}
		}
	}
	for(int j=1;j<=siz;j++)
	for(int k=0;k<=K;k++)
	if(k>=1)
		f[u][sta[j]][k]=min(f[u][sta[j]][k]+sum[u]*(dep[u]-dep[sta[j]]),g[u][sta[j]][k-1]);
	else f[u][sta[j]][k]+=sum[u]*(dep[u]-dep[sta[j]]);
	siz--;
}
int main(){
	scanf(""%d%d"",&n,&K);
	for(int i=1;i<=n;i++){
		scanf(""%s%d"",s+1,&m);
		add();
	}
	dfs(0);
	printf(""%d\n"",f[0][0][K]);
	return 0;
}",47869229,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 1505
#define D 11
using namespace std;
int n,k,cnt,sum,ch[N][D],flag[N][D][N],f[N][D][N],g[N],dep[N];
void gmax(int &x,int y){x=max(x,y);}

class trie{
  public:
  void insert(char *s,int val)
  {
    int x=0,len=strlen(s+1);g[0]+=val;
    for(int i=1;i<=len;i++)
    {
      int p=s[i]-'0';
      if(!ch[x][p])ch[x][p]=++cnt;
      x=ch[x][p];g[x]+=val;
	}
  }
}T;

int dfs(int x,int num,int pre)
{
  if(num<=0)return 0;
  if(flag[x][num][pre])return f[x][num][pre];
  flag[x][num][pre]=1;
  int res1=0,res2=0,now[D]={0},p[D];
  if(num)gmax(now[num],dfs(x,num-1,x)+g[x]*(dep[x]-dep[pre]));
  for(int c=0;c<10;c++)
  {
    if(!ch[x][c])continue;dep[ch[x][c]]=dep[x]+1;
    for(int i=0;i<=num;i++)p[i]=now[i];
    for(int i=0;i<=num;i++)
      for(int j=0;j<=i;j++)
	    gmax(now[i],p[j]+dfs(ch[x][c],i-j,pre));
  }
  for(int i=0;i<=num;i++)gmax(f[x][num][pre],now[i]);
  return f[x][num][pre];  
}

int main()
{
  int x;char s[N];
  scanf(""%d%d"",&n,&k);
  for(int i=1;i<=n;i++)
  {
    scanf("" %s%d"",s+1,&x);
	T.insert(s,x);sum+=strlen(s+1)*x;
  }
  printf(""%d\n"",sum-dfs(0,k,0));
  return 0;
}",46411331,GNU C++11,OK
,"#include<iostream>
#include<cstring>
using namespace std;
const int N=510;
int n,K,nod=1,f[N][N][12],fa[N][N],len[N],siz[N];
int dep[N],val[N],tmp[N][12],ch[N][12],Ans,mx,inf;
char s[N];
void Max(int &a,int b) {if(b>a) a=b;}
void dfs(int x)
{
	siz[x]=1;fa[x][0]=x;
	f[x][0][1]=dep[x]*val[x];
	for(int i=1;i<=len[x];i++)
		f[x][i][0]=dep[fa[x][i]]*val[x];
	for(int to=0;to<=9;to++)
	{
		if(!ch[x][to]) continue;
		int R=ch[x][to];
		for(int i=0;i<=len[x];i++) fa[R][++len[R]]=fa[x][i];
		dep[R]=dep[x]+1;dfs(R);
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				for(int b=0;b<=min(K-a,siz[R]);b++)
					Max(tmp[i][a+b],f[x][i][a]+max(f[R][i+1][b],f[R][0][b]));
		siz[x]+=siz[R];
		for(int i=0;i<=len[x];i++)
			for(int a=0;a<=min(K,siz[x]);a++)
				f[x][i][a]=tmp[i][a],tmp[i][a]=-inf;
	}
}
int main()
{
	cin>>n>>K;K++;
	for(int w=1;w<=n;w++)
	{
		scanf(""%s"",s+1);
		int l=strlen(s+1),x=1,v;
		for(int i=1;i<=l;i++)
		{
			int &k=ch[x][s[i]-'0'];
			if(!k) k=++nod;x=k;
		}
		scanf(""%d"",&v),val[x]+=v,Ans+=v*l;
	}
	memset(tmp,-15,sizeof(tmp));
	memset(f,-15,sizeof(f));
	inf=-tmp[0][0];dfs(1);
	for(int i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	cout<<Ans-mx<<endl;
}
",50777859,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int n,m,sz=0,num=0,ans=1e9;
int c[509][13],val[509],f[509][509][13],g[509][509][13];
bool vis[509][509];
char s[509];
int read(){
	int rex=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){rex=rex*10+ch-'0';ch=getchar();}
	return rex*f;
}
void insert(int x){
	int u=0,l=strlen(s+1);num+=l*x;
	for(int i=1;i<=l;++i){
		int v=s[i]-'0';
		if(!c[u][v])c[u][v]=++sz;
		u=c[u][v];
		val[u]+=x;
	}
}
void dfs(int u,int dep){
	if(vis[u][dep])return;
	vis[u][dep]=1;
	for(int i=0;i<=9;++i){
		if(!c[u][i])continue;
		dfs(c[u][i],1);
		for(int j=m-1;j>=1;--j){
			for(int k=0;k<=j;++k){
				f[u][dep][j]=max(f[u][dep][j],f[u][dep][k]+f[c[u][i]][1][j-k]);
			}
		}
		dfs(c[u][i],dep+1);
		for(int j=m;j>=1;--j){
			for(int k=0;k<=j;++k){
				g[u][dep][j]=max(g[u][dep][j],g[u][dep][k]+f[c[u][i]][dep+1][j-k]);
			}
		}
	}
	for(int i=m;i>=1;--i)f[u][dep][i]=max(f[u][dep][i-1]+val[u]*dep,g[u][dep][i]);	
}
int main(){
	n=read(),m=read();
	for(int i=1,x;i<=n;++i){
		scanf(""%s"",s+1);x=read();
		insert(x);
	}
	dfs(0,0);
	printf(""%d\n"",num-f[0][0][m]);
	return 0;
}",46619481,GNU C++11,OK
,"#include<bits/stdc++.h>
#define LL long long
#define il inline

using namespace std;
const int N=500+10;
il int rd()
{
    int x=0,w=1;char ch=0;
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}
    return x*w;
}
int n,kk,w[N],sm;
char cc[N][N];
int f[N][N][12],g[N][12],sz[N],de[N],a[N],len[N],ch[N][11],tt;
void inst(int i)
{
	int nw=0;
	for(int j=1;j<=len[i];++j)
	{
	    int x=cc[i][j]-'0';
	    if(!ch[nw][x]) ch[nw][x]=++tt;
	    nw=ch[nw][x];
	}
	a[nw]+=w[i];
}
void dp(int x)
{
	sz[x]=1;
	for(int i=0;i<=de[x];++i) f[x][i][!i]=a[x]*(de[x]-i);
	for(int i=0;i<=9;++i)
		if(ch[x][i])
		{
			int y=ch[x][i];
			de[y]=de[x]+1,dp(y);
			sz[x]+=sz[y];
			for(int j=0;j<=de[x];++j)
				for(int k=min(sz[x],kk);~k;--k)
				{
					int nw=-0x3f3f3f;
					for(int l=0;l<=sz[y]&&k-l>=0;++l)
						nw=max(nw,f[x][j][k-l]+max(f[y][j+1][l],f[y][0][l]));
					f[x][j][k]=nw;
				}
		}
}

int main()
{
    n=rd(),kk=rd()+1;
	for(int i=1;i<=n;++i)
	{
		scanf(""%s"",cc[i]+1);
		len[i]=strlen(cc[i]+1);
		w[i]=rd();
		sm+=w[i]*len[i];
		inst(i);
	}
	memset(f,-0x3f3f3f,sizeof(f));
	dp(0);
	int ma=0;
	for(int k=1;k<=kk;++k) ma=max(ma,f[0][0][k]);
	printf(""%d\n"",sm-ma);
    return 0;
}
",50778585,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}",46388574,GNU C++11,OK
,"#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 505
char w[N];
int fa[N][N],ans,val[N],n,K,cnt=1,ch[N][12];
int len[N],tmp[N][12],siz[N];
int f[N][N][12],dep[N],wa[N];
inline void upd(int &x,int y) {
	x=x>y?x:y;
}
void dfs(int x) {
	int i,j,k,l;
	fa[x][0]=x;
	siz[x]=1;
	for(i=0;i<=len[x];i++) {
		f[x][i][!i]=dep[fa[x][i]]*wa[x];
	}
	for(i=0;i<10;i++) if(ch[x][i]) {
		int t=ch[x][i];
		dep[t]=dep[x]+1;
		for(j=0;j<=len[x];j++) fa[t][++len[t]]=fa[x][j];

		dfs(t);
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				tmp[j][k]=f[x][j][k];
				f[x][j][k]=-0x3f3f3f3f;
			}
		}
		for(j=0;j<=len[x];j++) {
			for(k=0;k<=siz[x]&&k<=K;k++) {
				for(l=0;l<=siz[t]&&k+l<=K;l++) {
					upd(f[x][j][k+l],tmp[j][k]+max(f[t][j+1][l],f[t][0][l]));
				}
			}
		}
		siz[x]+=siz[t];
	}
}
int main() {
	memset(f,0xc0,sizeof(f));
	scanf(""%d%d"",&n,&K); K++;
	int i,j;
	for(i=1;i<=n;i++) {
		scanf(""%s%d"",w+1,&val[i]);
		int l=strlen(w+1);
		ans+=l*val[i];
		int p=1;
		for(j=1;j<=l;j++) {
			int &k=ch[p][w[j]-'0'];
			if(!k) k=++cnt;
			p=k; 
		}
		wa[p]+=val[i];
	}
	dfs(1);
	int mx=0;
	for(i=1;i<=K;i++) mx=max(mx,f[1][0][i]);
	printf(""%d\n"",ans-mx);
}

",46744518,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std; 

const int K = 12;
const int N = 555;

int n, k, sz = 0;
string s[N];
struct node {
    int sz;
    map<char,int> nxt;
} st[N];


int dp[N][N][K], knap[N][K];
void dfs(int u, int len) {
    for (auto kv : st[u].nxt) {
        int v = kv.second;
        dfs(v,len+1);
        for (int d = 0; d <= len; d++) {
            for (int k1 = k; k1 >= 0; k1--) {
                for (int k2 = 0; k1+k2 <= k; k2++) {
                    dp[u][d][k1+k2] = max(dp[u][d][k1+k2], dp[u][d][k1] + dp[v][d+1][k2]);
                }
            }
        }
    }
    if (u) {
        for (int d = 0; d <= len; d++) {
            for (int k1 = 1; k1 <= k; k1++) {
                dp[u][d][k1] = max(dp[u][d][k1], dp[u][0][k1-1] + st[u].sz * d);
            }
        }
    }
}

int main() {
    cin >> n >> k;
    sz = 1;
    int ans = 0;
    for (int i = 0; i < n; i++) {
        string s; int cc;
        cin >> s >> cc;
        ans += s.size()*cc;
        int cur = 0;
        st[cur].sz += cc;
        for (char c : s) {
            if (!st[cur].nxt.count(c)) st[cur].nxt[c] = sz++;
            cur = st[cur].nxt[c];
            st[cur].sz += cc;
        }
    }
    dfs(0,0); 
    cout << ans-dp[0][0][k] << endl;

    return 0;
}
",46428297,GNU C++11,OK
,"#include<bits/stdc++.h>
#define N 505
#define INF 0x3f3f3f3f
using namespace std;
int n,k,ans,len[N],cnt[N],sum[N];
char s[N][N];
int siz=1,nxt[N][26],dep[N];
int f[N][N][11],g[N][N][11],tf[N][11],tg[N][11];
void check(int &a,int b){a=a<b?b:a;}
void solve(int u)
{
	for(int i=1;i<=siz;++i)if(dep[i]<=dep[u])
		f[u][i][1]=(dep[u]-dep[i])*sum[u];
	for(int i=0,v;i<26;++i)
		if(v=nxt[u][i])
		{
			solve(v);
			memcpy(tf,f[u],sizeof f[u]);
			memset(f[u],-INF,sizeof f[u]);
			memcpy(tg,g[u],sizeof g[u]);
			memset(g[u],0,sizeof g[u]);
			for(int j=1;j<=siz;++j)if(dep[j]<=dep[u])
				for(int a=0;a<=k;++a)
					for(int b=0;a+b<=k;++b)
					{
						check(f[u][j][a+b],tf[j][a]+max(f[v][u][b],g[v][u][b]));
						check(g[u][j][a+b],tg[j][a]+max(f[v][j][b],g[v][j][b]));
					}
		}
}
int main()
{
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf(""%s%d"",s[i]+1,&cnt[i]);
		len[i]=strlen(s[i]+1);
		ans+=len[i]*cnt[i];
		for(int j=1,k=1;j<=len[i];++j)
		{
			s[i][j]-='0';
			if(!nxt[k][s[i][j]])
			{
				nxt[k][s[i][j]]=++siz;
				dep[siz]=dep[k]+1;
			}
			k=nxt[k][s[i][j]];
			sum[k]+=cnt[i];
		}
	}
	memset(f,-INF,sizeof f);
	solve(1);
	int mx=0;
	for(int i=0;i<=k;++i)
		mx=max(mx,g[1][1][i]);
	printf(""%d\n"",ans-mx);
}
",46637242,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long ll;
const int Maxn=1520;
const int Maxm=11;
const double eps=1e-9;

int f[Maxn][Maxn][Maxm],n,k,zhy,vis[Maxn][Maxn],ch[Maxn][Maxm],siz[Maxn],tot,ans;
char a[Maxn];

void dp(int root,int len) {
	if(vis[root][len]) return;
	vis[root][len]=1;
	int ans[Maxm];
	memset(ans,0x80,sizeof(ans));
	ans[0]=0;
	int ans2[Maxm];
	memset(ans2,0x80,sizeof(ans2));
	ans2[1]=len*siz[root];
	for(int i=0;i<10;i++) 
		if(ch[root][i]) {
			int sxz=ch[root][i];
			dp(sxz,len+1);dp(sxz,1);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans[j]=max(ans[j],ans[j-l]+f[sxz][len+1][l]);
			for(int j=k;j;j--) for(int l=1;l<=j;l++)
				ans2[j]=max(ans2[j],ans2[j-l]+f[sxz][1][l]);
		}
	for(int i=0;i<=k;i++) f[root][len][i]=max(0,max(ans[i],ans2[i]));
}

int main() {
//	freopen(""test.in"",""r"",stdin);
	scanf(""%d%d"",&n,&k);
	for(int i=1;i<=n;i++) {
		scanf(""%s%d"",a,&zhy);
		int now=0,len=strlen(a),temp=0;
		while(temp<len) {
			int x=a[temp]-'0';
			if(ch[now][x]==0) ch[now][x]=++tot;
			now=ch[now][x];
			siz[now]+=zhy;
			temp++;
		}
		ans+=len*zhy;
	}
	dp(0,0);
	int sxz=0;
	for(int i=0;i<=k;i++) sxz=max(sxz,f[0][0][i]);
	printf(""%d"",ans-sxz);
	return 0;
}
",46361425,GNU C++11,OK
,"#include <bits/stdc++.h>
using namespace std;

const int MAXN = 505;
int son[MAXN][10], f[MAXN][MAXN][12], g[12], app[MAXN], sz[MAXN], n, m, tot;
int sta[MAXN], tp;
char str[MAXN];
void upd(int &a, int b) { a = a > b ? a : b; }
void dfs(int u) {
	sta[++tp] = u;
	for (int i = 0; i < 10; i++) {
		int s = son[u][i];
		if (s > 0) dfs(s);
	}
	for (int i = 1; i <= tp; i++) {
		int p = sta[i];
		f[u][p][u == p] = app[u] * (tp - i);
		sz[u] = 1;
		for (int j = 0; j < 10; j++) {
			int s = son[u][j];
			if (!s) continue;
			memset(g, 0x3f, sizeof(g));
			for (int k = 0; k <= sz[u] && k <= m; k++)
			for (int l = 0; l <= sz[s] && k + l <= m; l++)
				g[k + l] = min(g[k + l], f[u][p][k] + min(f[s][s][l], f[s][p][l]));
			sz[u] += sz[s];
			for (int k = 0; k <= sz[u] && k <= m; k++) f[u][p][k] = g[k];
		}
	}
	--tp;
}
int main() {
	memset(f, 0x3f, sizeof(f));
	scanf(""%d%d"", &n, &m); ++m;
	tot = 1;
	for (int i = 1; i <= n; i++) {
		int v; scanf(""%s%d"", str + 1, &v);
		int l = strlen(str + 1), k = 1;
		for (int j = 1; j <= l; j++) {
			int &s = son[k][str[j] - '0'];
			if (!s) s = ++tot;
			k = s;
		}
		app[k] += v;
	}
	dfs(1);
	int res = 0x3f3f3f3f;
	for (int i = 0; i <= m; i++) res = min(res, f[1][1][i]);
	printf(""%d\n"", res);
	return 0;
}",56740295,GNU C++11,OK
,"#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(""Ofast"")
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
namespace ywy{
	int trie[511][10],cnt[511],deep[511],k,dp[511][511][11];
	void dfs(int pt){
		for(register int i=0;i<=9;i++)if(trie[pt][i])deep[trie[pt][i]]=deep[pt]+1,dfs(trie[pt][i]);
		for(register int i=0;i<=deep[pt];i++){
			dp[pt][i][i==deep[pt]&&i!=0]=cnt[pt]*(deep[pt]-i);for(register int x=0;x<=9;x++){
				if(!trie[pt][x])continue;for(register int j=k;j>=0;j--){
					int haha=0x3f3f3f3f;for(register int a=0;a<=j;a++){
						int d=min(dp[trie[pt][x]][i][a],dp[trie[pt][x]][deep[pt]+1][a]);
						if(d==0x3f3f3f3f||dp[pt][i][j-a]==0x3f3f3f3f)continue;
						haha=min(haha,dp[pt][i][j-a]+d);
					}dp[pt][i][j]=haha;
				}
			}
		}
	}char str[511];
	void ywymain(){
		memset(dp,0x3f,sizeof(dp));int n;cin>>n>>k;int gn=2;for(register int i=1;i<=n;i++){
			cin>>str;int len=strlen(str);int m;cin>>m;int cur=1;
			for(register int j=0;j<len;j++){
				if(!trie[cur][str[j]-'0'])trie[cur][str[j]-'0']=gn,gn++;cur=trie[cur][str[j]-'0'];
			}cnt[cur]+=m;
		}dfs(1);int minn=0x3f3f3f3f;for(register int i=0;i<=k;i++)minn=min(minn,dp[1][0][i]);
		cout<<minn<<endl;
	}
}
int main(){
	ywy::ywymain();return(0);
}",51569413,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777232,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
using namespace std;
#include<cstring>
#define N 510
#define M 1004010
struct node{
	int to,next;
}q[M];
int head[N],dep[N],ss,V[N],cc=1,f[N][N][12],sz[N],k,g[12],son[N][20];char s[N][N];
void addedge(int x,int y) {q[++ss]=(node){y,head[x]};head[x]=ss;}
void insert(char *s,int v)
{
	int nw=1,len=strlen(s+1);
	for (int i=1;i<=len;++i)
		nw=son[nw][s[i]-'0']?son[nw][s[i]-'0']:	
	   	   son[nw][s[i]-'0']=++cc;
	V[nw]+=v;
}
void dfs(int i)
{
	sz[i]=1;
	for (int j=head[i];j;j=q[j].next)
	{
		int t=q[j].to;
		dep[t]=dep[i]+1;
		dfs(t);
		V[i]+=V[t];
		for (int p=0;p<=dep[i];++p)
		{
			memset(g,0,sizeof(g));
			for (int l=0;l<=sz[i]&&l<=k;++l)
				for (int o=0;o<=sz[t]&&o+l<=k;++o) g[l+o]=max(g[l+o],f[i][p][l]+f[t][p][o]);
			for (int l=0;l<=k;++l) f[i][p][l]=g[l];
		}
		sz[i]+=sz[t];
	}
	for (int j=0;j<=dep[i];++j)
		for (int l=1;l<=k;++l) f[i][j][l]=max(f[i][j][l],f[i][dep[i]][l-1]+(dep[i]-j)*V[i]);
}
int main()
{
	int n,all=0,ans=0,a;
	scanf(""%d%d"",&n,&k);
	for (int i=1;i<=n;++i) 
	{
		scanf(""%s%d"",s[i]+1,&a);
		insert(s[i],a);
		all+=1ll*a*strlen(s[i]+1);
	}
	for (int i=1;i<=cc;++i)
		for (int j=0;j<10;++j)
			if (son[i][j]) addedge(i,son[i][j]);
	dfs(1);
	for (int i=0;i<=k;++i) ans=max(ans,f[1][0][i]);
	printf(""%d"",all-ans);
	return 0;
}

//by qlwpc",52065597,GNU C++11,OK
,"#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define MAX 505
const int inf=1073741823;
inline int read()
{
	int x=0;bool t=false;char ch=getchar();
	while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
	if(ch=='-')t=true,ch=getchar();
	while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();
	return t?-x:x;
}
struct Node{int son[10],v;}t[MAX];
int tot=1;
int n,K,ans=inf;char ch[MAX];
int f[MAX][MAX][12],dep[MAX];
void Insert(char *s,int w)
{
	int u=1,l=strlen(s+1);
	for(int i=1;i<=l;++i)
	{
		if(!t[u].son[s[i]-48])t[u].son[s[i]-48]=++tot;
		u=t[u].son[s[i]-48];dep[u]=i;
	}
	t[u].v+=w;
}
void cmin(int &x,int y){x=min(x,y);}
int Solve(int u,int ld,int p)
{
	if(~f[u][ld][p])return f[u][ld][p];
	int g[12];memset(g,63,sizeof(g));
	g[u==ld]=t[u].v*(dep[u]-dep[ld]);
	for(int i=0;i<=9;++i)
	{
		int v=t[u].son[i];if(!v)continue;
		int tmp[12];memset(tmp,63,sizeof(tmp));
		for(int j=0;j<=K;++j)
			for(int k=0;k+j<=K;++k)
				cmin(tmp[j+k],g[j]+min(Solve(v,ld,k),k?Solve(v,v,k):inf));
		for(int j=0;j<=K;++j)g[j]=tmp[j];
	}
	for(int i=0;i<=K;++i)f[u][ld][p]=g[p];
	return f[u][ld][p];
}
int main()
{
	n=read();K=read()+1;memset(f,-1,sizeof(f));
	if(n<K){puts(""0"");return 0;}
	for(int i=1;i<=n;++i)scanf(""%s"",ch+1),Insert(ch,read());
	for(int i=0;i<=K;++i)ans=min(ans,Solve(1,1,i));
	printf(""%d\n"",ans);
	return 0;
}
",50777181,GNU C++11,OK
,"#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
int n,K,i,j,k,m[505],cnt=1,ch[505][15],w[505],dep[505],f[505][505][15],g[505][15],ans;
char s[505];
void dfs(int x)
{
	for(int j=0;j<=K;++j)
		f[x][dep[x]][j]=-(1<<30);
	f[x][dep[x]][1]=0;
	for(int y=0;y<=9;++y)
		if(ch[x][y])
		{
			dep[ch[x][y]]=dep[x]+1;
			dfs(ch[x][y]);
			w[x]+=w[ch[x][y]];
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					g[i][j]=-(1<<30);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					for(int k=0;j+k<=K;++k)
						if(f[x][i][j]>-(1<<30)&&f[ch[x][y]][i][k]>-(1<<30))
							g[i][j+k]=max(g[i][j+k],f[x][i][j]+f[ch[x][y]][i][k]);
			for(int i=0;i<=dep[x];++i)
				for(int j=0;j<=K;++j)
					f[x][i][j]=g[i][j];
		}
	for(int j=0;j<=K;++j)
		if(f[x][dep[x]][j]>-(1<<30))
		{
			for(int i=0;i<dep[x];++i)
				f[x][i][j]=max(f[x][i][j],f[x][dep[x]][j]+w[x]*(dep[x]-i));
		}
	/*for(int i=0;i<=dep[x];++i)
		for(int j=0;j<=K;++j)
			if(f[x][i][j]>-(1<<30))
				printf(""%d %d %d %d\n"",x,i,j,f[x][i][j]);*/
}
int main()
{
	scanf(""%d%d"",&n,&K);
	++K;
	for(i=1;i<=n;++i)
	{
		scanf(""%s%d"",s+1,m+i);
		for(j=1,k=1;s[j];++j)
		{
			if(!ch[k][s[j]-'0'])
				ch[k][s[j]-'0']=++cnt;
			k=ch[k][s[j]-'0'];
		}
		w[k]+=m[i];
		ans+=(j-1)*m[i];
	}
	dfs(1);
	j=0;
	for(i=0;i<=K;++i)
		j=max(j,f[1][0][i]);
	ans-=j;
	printf(""%d"",ans);
	return 0;
}
",74185821,GNU C++11,OK
,"#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using std::min; using std::max;
using std::swap; using std::sort;
typedef long long ll;

template<typename T>
void read(T &x) {
	int flag = 1; x = 0; char ch = getchar();
	while(ch < '0' || ch > '9') { if(ch == '-') flag = -flag; ch = getchar(); }
	while(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); x *= flag;
}

const int _ = 5e2 + 10, Inf = 1e9 + 7;
char s[_]; int ch[_][12], v[_];
int n, m, rt, ret = Inf, poi, f[_][_][12], dep[_];
inline void ChkMin(int &a, int b) { if(a > b) a = b; }

int dp(int u, int l, int ct) {
	if(f[u][l][ct] != -1) return f[u][l][ct];
	int g[12]; memset(g, 63, sizeof g);
	g[u == l] = v[u] * (dep[u] - dep[l]);
	for(int i = 0; i <= 9; ++i) {
		int v = ch[u][i]; if(!v) continue;
		int tmp[12]; memset(tmp, 63, sizeof tmp);
		for(int j = 0; j <= m; ++j)
			for(int k = 0; k + j <= m; ++k)
				ChkMin(tmp[j + k], g[j] + min(dp(v, l, k), k ? dp(v, v, k) : Inf));
		for(int j = 0; j <= m; ++j) g[j] = tmp[j];
	}
	return f[u][l][ct] = g[ct];
}

int main () {
	read(n), read(m), ++m, rt = ++poi;
	memset(f, -1, sizeof f);
	for(int i = 1, val; i <= n; ++i) {
		scanf(""%s%d"", s + 1, &val);
		int p = rt, len = strlen(s + 1);
		for(int j = 1; j <= len; ++j) {
			int &t = ch[p][s[j] - '0'];
			if(!t) t = ++poi; p = t, dep[p] = j;
		} v[p] += val;
	}
	for(int i = 0; i <= m; ++i) ChkMin(ret, dp(rt, rt, i));
	printf(""%d\n"", ret);
	return 0;
} 
",50783171,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}
",46431759,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46745886,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;//////////////////////
}",46432155,GNU C++11,OK
,"#include <bits/stdc++.h>

#define forn(i, n) for (int i = 0; i < int(n); i++)

using namespace std;

const int N = 500 + 7;
const int M = 11;
const int INF = 1e9;

struct node{
	int nxt[10];
	int cnt;
	node(){
		memset(nxt, -1, sizeof(nxt));
		cnt = 0;
	}
};

node trie[N];
int cnt;
int h[N];

void add(string s, int m){
	int cur = 0;
	forn(i, s.size()){
		int c = s[i] - '0';
		if (trie[cur].nxt[c] == -1){
			trie[cur].nxt[c] = cnt;
			h[cnt] = h[cur] + 1;
			++cnt;
		}
		cur = trie[cur].nxt[c];
	}
	trie[cur].cnt += m;
}

int n, k;

int dp[N][M][N];
int dp2[N][M][N][M];

int calc(int x, int rem, int k){
	if (dp[x][rem][k] != -1)
		return dp[x][rem][k];
	
	vector<int> ch;
	forn(i, 10) if (trie[x].nxt[i] != -1)
		ch.push_back(trie[x].nxt[i]);
	
	dp[x][rem][k] = INF;
	if (rem > 0)
		dp[x][rem][k] = min(dp[x][rem][k], calc(x, rem - 1, x));
	
	dp2[x][rem][k][ch.size()] = 0;
	for (int i = int(ch.size()) - 1; i >= 0; --i) forn(z, rem + 1)
		dp2[x][rem][k][i] = min(dp2[x][rem][k][i], calc(ch[i], z, k) + dp2[x][rem - z][k][i + 1]);
	
	dp[x][rem][k] = min(dp[x][rem][k], dp2[x][rem][k][0] + (h[x] - h[k]) * trie[x].cnt);
	
	return dp[x][rem][k];
}

int main() {
	trie[0] = node();
	cnt = 1;
	
	cin >> n >> k;
	forn(i, n){
		string s;
		int m;
		cin >> s >> m;
		add(s, m);
	}
	
	memset(dp, -1, sizeof(dp));
	
	forn(i, N) forn(j, M) forn(l, N) forn(t, M)
		dp2[i][j][l][t] = INF;
	
	int ans = calc(0, k, 0);
	
	cout << ans << endl;
	return 0;
}",48276503,GNU C++11,OK
,"#include ""bits/stdc++.h""
using namespace std;
int t[555][30];
int val[555];
int h[555];
int node;

void insert(string s, int x) {
	int cur = 0;
	int height = 0;
	for(int i = 0; i < s.size(); i++) {
		int c = s[i] - '0';
		if(t[cur][c] == -1) {
			t[cur][c] = ++node;
		}
		cur = t[cur][c];
		h[cur] = ++height;
	}
	val[cur] += x;
}

int dp[555][555][12];
int piv;
int last;
int mem[26][11];
const int inf = 1e9;
int k;

int fn(int now, int take) {
	if(now == 26) {
		if(h[piv] == last && last > 0) {
			if(take == 0) return inf;
			else return 0;
		} 
		else return val[piv] * (h[piv] - last);
	}
	if(mem[now][take] != -1) return mem[now][take];
	int ans;
	if(t[piv][now] != -1) {
		ans = inf;
		int nxt = t[piv][now];
		for(int x = 0; x <= take; x++) {
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][last][x]);
			ans = min(ans, fn(now + 1, take - x) + dp[nxt][h[nxt]][x]);
		}
	} else {
		ans = fn(now + 1, take);
	}
	return mem[now][take] = ans;
}

void dfs(int cur) {
	for(int i = 0; i < 26; i++) {
		if(t[cur][i] != -1) {
			dfs(t[cur][i]);
		}
	}
	piv = cur;
	for(last = 0; last <= h[cur]; last++) {
		memset(mem, -1, sizeof mem);
		for(int x = 0; x <= k; x++) {
			dp[cur][last][x] = fn(0, x);
		}
	}
} 

int main(int argc, char const *argv[])
{
	memset(t, -1, sizeof t);

	int n;
	cin >> n >> k;
	for(int i = 1; i <= n; i++) {
		string s;
		int x;
		cin >> s >> x;
		insert(s, x);
	}
	dfs(0);
	printf(""%d\n"", dp[0][0][k]);
	return 0;
}",46328553,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;
#define nn 505
#define ll long long
#define lf double
#define ciri 10
int n,tms;
void upd(int &x,int y)
{
	x=min(x,y);
}
struct trietree{
	int node[nn][12];int sum[nn];
	int dp[nn][nn][12];
	int dp2[nn][nn][12][12];
	// x  p   tms   ciri
	bool vis[nn][nn][15];
	int dep[nn];
	int tot;
	void insert(char ch[],int val)
	{
		int now=0;int l=strlen(ch);
		for(int i=0;i<l;i++)
		{
			int rt=ch[i]-'0';
			if(node[now][rt]==0) 
				node[now][rt]=++tot,dep[tot]=dep[now]+1;
			now=node[now][rt];
		}
		sum[now]+=val;
	}
	void dfs(int x,int p,int lft)
	{
		if(vis[x][p][lft]) return ;
		vis[x][p][lft]=1;
		if(lft>0) dfs(x,x,lft-1),upd(dp[x][p][lft],dp[x][x][lft-1]);
		vector<int> ch;
		for(int i=0;i<ciri;i++) if(node[x][i]) ch.push_back(node[x][i]);
		dp2[x][p][lft][ch.size()]=0;	
		for(int i=ch.size()-1;i>=0;i--)
		{
			int t=ch[i];
			for(int j=0;j<=lft;j++)
			{
				dfs(t,p,j);
				upd(dp2[x][p][lft][i],
					dp2[x][p][lft-j][i+1]+dp[t][p][j]);	
			}	
		}
		upd(dp[x][p][lft],dp2[x][p][lft][0]+(dep[x]-dep[p])*sum[x]);
	}
	int solve()
	{
		memset(dp,0x3f,sizeof(dp));
		memset(dp2,0x3f,sizeof(dp2));
		dfs(0,0,tms);
		return dp[0][0][tms];
	}
}trie;char buf[1008];
int main()
{
	cin>>n>>tms;
	for(int i=0;i<n;i++)
	{
		scanf(""%s"",buf);int gg;cin>>gg;
		trie.insert(buf,gg);
	}
	cout<<trie.solve();
	return 0;/////
}",46745916,GNU C++11,OK
,"#include<bits/stdc++.h>
using namespace std;const int M=1e6+10;
struct node{
    node *nxt[10];
    int num,sum;
    node(int _num){num=_num;for(int i=0;i<10;i++)nxt[i]=0;sum=0;}
}*root;int cnt,deep[M],f[1000][1000][11],g[1000][1000][11],st[M],sz,K;
void insert(char *s,int sum){
    node *p=root;int x;for(int i=1;s[i];i++){
        x=s[i]-'0';if(!p->nxt[x])p->nxt[x]=new node(++cnt);
        p=p->nxt[x];
    }p->sum+=sum;
}
void dfs(node *p){int u=p->num,v;
    st[++sz]=u;for(int i=0;i<10;i++)if(p->nxt[i]){
        v=p->nxt[i]->num,deep[v]=deep[u]+1;dfs(p->nxt[i]);
        for(int j=1;j<=sz;j++){
            for(int k=K;k>=0;k--){
                f[u][st[j]][k]+=f[v][st[j]][0],g[u][st[j]][k]+=f[v][u][0];
                for(int x=k;x>=0;x--){
                    f[u][st[j]][k]=min(f[u][st[j]][k],f[u][st[j]][k-x]+f[v][st[j]][x]);
                    g[u][st[j]][k]=min(g[u][st[j]][k],g[u][st[j]][k-x]+f[v][u][x]);
                }
            }
        }
    }for(int j=1;j<=sz;j++){
        for(int k=K;k>=0;k--)
        if(k>=1)f[u][st[j]][k]=min(f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]),g[u][st[j]][k-1]);
        else f[u][st[j]][k]=f[u][st[j]][k]+p->sum*(deep[u]-deep[st[j]]);
    }sz--;
}char s[10000];
int main(){root=new node(cnt);
    int n,a;scanf(""%d%d"",&n,&K);for(int i=1;i<=n;i++){
        scanf(""%s%d"",s+1,&a);insert(s,a);
    }dfs(root);printf(""%d\n"",f[0][0][K]);
}",47858495,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mk make_pair
#define rint register int
using namespace std;
inline int read(){int w=1,s=0;char ch=getchar();while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}return w*s;}
ll f[550][550][11],cnt,ch[100010][12],ans,tmp[11],size[5050];
int n,k;
char s[1000010];
int vis[550][550];
inline void DFS(int now,int lasdep,int dep){
	if(vis[now][lasdep]) return ;
	vis[now][lasdep]=1;
	for(rint i=0;i<10;++i){
		int to=ch[now][i];
		if(!to) continue;
		DFS(to,lasdep,dep+1);
		memset(tmp,0,sizeof(tmp));
		for(rint j=0;j<=k;++j)
		for(rint p=0;p<=k;++p)
			if(j+p<=k) tmp[j+p]=max(tmp[j+p],f[now][lasdep][j]+f[to][lasdep][p]);
		for(rint j=0;j<=k;++j) f[now][lasdep][j]=tmp[j];
	}
	if(lasdep!=dep){
		DFS(now,dep,dep);
		for(rint i=1;i<=k;++i) f[now][lasdep][i]=max(f[now][lasdep][i],f[now][dep][i-1]+1ll*(dep-lasdep)*size[now]);
	}
}
int main()
{
	n=read(),k=read();
	if(k>=n){
		cout<<0;
		return 0;
	}
	for(rint i=1;i<=n;++i)
	{
		scanf(""%s"",s+1);int w=read();
		int len=strlen(s+1);ans+=1ll*len*w;
		int now=0;
		for(rint j=1;j<=len;++j)
		{
			int c=s[j]-'0';
			if(ch[now][c]) now=ch[now][c];
			else now=ch[now][c]=++cnt;
			size[now]+=w;
		}
	}
	DFS(0,0,0);
	ll Max=0;
	for(rint i=1;i<=k;++i){
		Max=max(Max,f[0][0][i]);
	}cout<<ans-Max;
	return 0;
}
",46388284,GNU C++11,OK
,"#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fir first
#define sec second
#define ld long double
using namespace std;
const int N=510;
typedef pair <int,int> P;
int n,k,tot=1,ch[N][11];;
ll sum[N];
int deep[N],w[N];
ll f[N][N][11],g[12];
char s[N];
int read()
{
	int x=0;char c=getchar(),flag='+';
	while(!isdigit(c)) flag=c,c=getchar();
	while(isdigit(c)) x=x*10+c-'0',c=getchar();
	return flag=='-'?-x:x;
}
void Insert(int k)
{
	int now=1,len=strlen(s+1);
	for(int i=1;i<=len;i++)
	{
		int c=s[i]-'0';
		sum[now]+=k;
		if(!ch[now][c]) ch[now][c]=++tot,deep[tot]=deep[now]+1;
		now=ch[now][c];
	}
	sum[now]+=k;
}
void dfs(int u)
{
	for(int i=0;i<10;i++)
	{
		int v=ch[u][i];
		if(!v) continue;
		dfs(v);
		for(int j=0;j<=deep[u];j++)
		{
			memset(g,0,sizeof(g));
			for(int e=0;e<=k;e++) 
				for(int l=0;l+e<=k;l++) g[e+l]=max(g[e+l],f[u][j][e]+f[v][j][l]);
			for(int e=0;e<=k;e++) f[u][j][e]=g[e];
		}
	}
	for(int j=0;j<=deep[u];j++) 
		for(int i=1;i<=k;i++) f[u][j][i]=max(f[u][j][i],f[u][deep[u]][i-1]+1ll*(deep[u]-j)*sum[u]);
}
int main()
{
	n=read(),k=read();
	ll dd=0;
	for(int i=1;i<=n;i++)
	{
		scanf(""%s%d"",s+1,&w[i]);
		Insert(w[i]);
		dd+=1ll*w[i]*strlen(s+1);
	}
	dfs(1);
	ll ans=0;
	for(int i=0;i<=k;i++) ans=max(ans,f[1][0][i]);
//	cout<<ans<<endl;
	cout<<dd-ans;
	return 0;
}
/*by DT_Kang*/",51944323,GNU C++11,OK
,"#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rint register int
using namespace std;
inline void read(int &x) {
	x=0;int f=1;char ch=getchar();
	while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}
	while(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();
	x*=f;
}
const int maxn=510,inf=0x7f7f7f7f;

int n,k,val[maxn],ch[maxn][10],tot,dp[maxn][maxn][13],sta[maxn],pre[maxn];
char s[maxn];
inline int ins(char* s,int len) {
	int p=0;
	for(rint i=0;i<len;++i) {
		int& q=ch[p][s[i]-'0'];
		if(!q) q=++tot;
		p=q;
	}
	return p;
}
void dfs(int u) {
	sta[++sta[0]]=u;
	for(rint i=sta[0];i;--i) dp[u][sta[i]][0]=val[u]*(pre[u]-pre[sta[i]]);
	for(rint i=0,v;i<=9;++i) {
		v=ch[u][i];
		if(!v) continue;
		pre[v]=pre[u]+1;
		dfs(v);
		for(rint j=sta[0],p;p=sta[j],j;--j)
			for(rint x=k;x>=0;--x) {
				if(dp[u][p][x]==inf||dp[v][p][0]==inf) dp[u][p][x]=inf;
				else  dp[u][p][x]+=dp[v][p][0];
				for(rint y=0;y<=k&&y<x;++y) if(dp[u][p][y]!=inf&&dp[v][p][x-y]!=inf)
					dp[u][p][x]=min(dp[u][p][x],dp[u][p][y]+dp[v][p][x-y]);
			}
	}
	for(rint i=sta[0];i;--i) for(rint x=1;x<=k;++x) dp[u][sta[i]][x]=min(dp[u][sta[i]][x],dp[u][u][x-1]);
	--sta[0];
}
int main() {
	read(n);read(k);
	for(rint i=1;i<=n;++i) {
		int x;scanf(""%s"",s),read(x);
		val[ins(s,strlen(s))]+=x;
	}
	memset(dp,0x7f,sizeof dp);
	dfs(0);cout<<dp[0][0][k];
	return 0;
}
",52148238,GNU C++11,OK
